<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NetatmoWeb</name>
    </assembly>
    <members>
        <member name="T:NetatmoWeb.Controllers.NetatmoController">
            <summary>
            The Netatmo controller for reading Netatmo data items.
            </summary>
        </member>
        <member name="M:NetatmoWeb.Controllers.NetatmoController.#ctor(NetatmoLib.INetatmo,Microsoft.Extensions.Options.IOptions{NetatmoWeb.Models.AppSettings},Microsoft.Extensions.Logging.ILogger{NetatmoWeb.Controllers.NetatmoController})">
            <summary>
            Initializes a new instance of the <see cref="T:NetatmoWeb.Controllers.NetatmoController"/> class.
            </summary>
            <param name="netatmo">The Netatmo instance.</param>
            <param name="options">The application options.</param>
            <param name="logger">The application logger.</param>
        </member>
        <member name="M:NetatmoWeb.Controllers.NetatmoController.GetIsInitialized">
            <summary>
            Returns flag indicating that the data have been sucessfully initialized.
            </summary>
            <returns>The action method result.</returns>
            <response code="200">Returns the requested data.</response>
        </member>
        <member name="M:NetatmoWeb.Controllers.NetatmoController.GetNetatmoData(System.Boolean)">
            <summary>
            Returns all Netatmo related data.
            </summary>
            <param name="update">Indicates if an update is requested.</param>
            <returns>The action method result.</returns>
            <response code="200">Returns the requested data.</response>
            <response code="406">An internal update is still in progress.</response>
            <response code="500">If an error or an unexpected exception occurs.</response>
            <response code="502">If the update procedure was unsuccessful.</response>
        </member>
        <member name="M:NetatmoWeb.Controllers.NetatmoController.GetMainModuleData(System.Boolean)">
            <summary>
            Returns a subset of Netatmo data.
            </summary>
            <param name="update">Indicates if an update is requested.</param>
            <returns>The action method result.</returns>
            <response code="200">Returns the requested data.</response>
            <response code="406">An internal update is still in progress.</response>
            <response code="500">If an error or an unexpected exception occurs.</response>
            <response code="502">If the update procedure was unsuccessful.</response>
        </member>
        <member name="M:NetatmoWeb.Controllers.NetatmoController.GetOutdoorModuleData(System.Boolean)">
            <summary>
            Returns a subset of Netatmo data.
            </summary>
            <param name="update">Indicates if an update is requested.</param>
            <returns>The action method result.</returns>
            <response code="200">Returns the requested data.</response>
            <response code="406">An internal update is still in progress.</response>
            <response code="500">If an error or an unexpected exception occurs.</response>
            <response code="502">If the update procedure was unsuccessful.</response>
        </member>
        <member name="M:NetatmoWeb.Controllers.NetatmoController.GetIndoorModule1Data(System.Boolean)">
            <summary>
            Returns a subset of Netatmo data.
            </summary>
            <param name="update">Indicates if an update is requested.</param>
            <returns>The action method result.</returns>
            <response code="200">Returns the requested data.</response>
            <response code="406">An internal update is still in progress.</response>
            <response code="500">If an error or an unexpected exception occurs.</response>
            <response code="502">If the update procedure was unsuccessful.</response>
        </member>
        <member name="M:NetatmoWeb.Controllers.NetatmoController.GetIndoorModule2Data(System.Boolean)">
            <summary>
            Returns a subset of Netatmo data.
            </summary>
            <param name="update">Indicates if an update is requested.</param>
            <returns>The action method result.</returns>
            <response code="200">Returns the requested data.</response>
            <response code="406">An internal update is still in progress.</response>
            <response code="500">If an error or an unexpected exception occurs.</response>
            <response code="502">If the update procedure was unsuccessful.</response>
        </member>
        <member name="M:NetatmoWeb.Controllers.NetatmoController.GetIndoorModule3Data(System.Boolean)">
            <summary>
            Returns a subset of Netatmo data.
            </summary>
            <param name="update">Indicates if an update is requested.</param>
            <returns>The action method result.</returns>
            <response code="200">Returns the requested data.</response>
            <response code="406">An internal update is still in progress.</response>
            <response code="500">If an error or an unexpected exception occurs.</response>
            <response code="502">If the update procedure was unsuccessful.</response>
        </member>
        <member name="M:NetatmoWeb.Controllers.NetatmoController.GetRainGaugeData(System.Boolean)">
            <summary>
            Returns a subset of Netatmo data.
            </summary>
            <param name="update">Indicates if an update is requested.</param>
            <returns>The action method result.</returns>
            <response code="200">Returns the requested data.</response>
            <response code="406">An internal update is still in progress.</response>
            <response code="500">If an error or an unexpected exception occurs.</response>
            <response code="502">If the update procedure was unsuccessful.</response>
        </member>
        <member name="M:NetatmoWeb.Controllers.NetatmoController.GetWindGaugeData(System.Boolean)">
            <summary>
            Returns a subset of Netatmo data.
            </summary>
            <param name="update">Indicates if an update is requested.</param>
            <returns>The action method result.</returns>
            <response code="200">Returns the requested data.</response>
            <response code="406">An internal update is still in progress.</response>
            <response code="500">If an error or an unexpected exception occurs.</response>
            <response code="502">If the update procedure was unsuccessful.</response>
        </member>
        <member name="M:NetatmoWeb.Controllers.NetatmoController.GetNetatmoData(System.String,System.Boolean)">
            <summary>
            Returns a single Netatmo property.
            </summary>
            <remarks>The property name is a CamelCase name.</remarks>
            <param name="name">The name of the property.</param>
            <param name="update">Indicates if an update is requested.</param>
            <returns>The action method result.</returns>
            <response code="200">Returns the requested data.</response>
            <response code="400">If the property is invalid.</response>
            <response code="404">If the property cannot be found.</response>
            <response code="406">An internal update is still in progress.</response>
            <response code="500">If an error or an unexpected exception occurs.</response>
            <response code="502">If the update procedure was unsuccessful.</response>
        </member>
        <member name="T:NetatmoWeb.Hubs.NetatmoHub">
            <summary>
            SignalR Hub class for Netatmo data.
            </summary>
        </member>
        <member name="M:NetatmoWeb.Hubs.NetatmoHub.#ctor(NetatmoLib.INetatmo,Microsoft.Extensions.Logging.ILogger{NetatmoWeb.Hubs.NetatmoHub},Microsoft.Extensions.Options.IOptions{NetatmoWeb.Models.AppSettings})">
            <summary>
            Initializes an instance of the <see cref="T:NetatmoWeb.Hubs.NetatmoHub"/> class.
            </summary>
            <param name="netatmo">The Netatmo instance.</param>
            <param name="logger">The application logger.</param>
            <param name="options">The application options.</param>
        </member>
        <member name="M:NetatmoWeb.Hubs.NetatmoHub.OnConnectedAsync">
            <summary>
            Establish connection and broadcast data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetatmoWeb.Hubs.NetatmoHub.UpdateData">
            <summary>
            Callback to provide data updates.
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetatmoWeb.Models.AppSettings">
            <summary>
            Helper class to hold application specific settings.
            </summary>
        </member>
        <member name="P:NetatmoWeb.Models.AppSettings.Swagger">
            <summary>
            The Swagger options.
            </summary>
        </member>
        <member name="T:NetatmoWeb.Models.SwaggerOptions">
            <summary>
            The Swagger info data objects provides metadata about the web API.
            </summary>
        </member>
        <member name="P:NetatmoWeb.Models.SwaggerOptions.Info">
            <summary>
            The Info object provides metadata about the API.
            </summary>
        </member>
        <member name="T:NetatmoWeb.Pages.AboutModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetatmoWeb.Pages.AboutModel.Message">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetatmoWeb.Pages.AboutModel.OnGet">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetatmoWeb.Pages.ErrorModel">
            <summary>
            Default ASP.NET core error handling page.
            </summary>
        </member>
        <member name="P:NetatmoWeb.Pages.ErrorModel.RequestId">
            <summary>
            The current request ID.
            </summary>
        </member>
        <member name="P:NetatmoWeb.Pages.ErrorModel.ShowRequestId">
            <summary>
            Flag indicating to show the current request ID.
            </summary>
        </member>
        <member name="M:NetatmoWeb.Pages.ErrorModel.OnGet">
            <summary>
            Initializes the state needed for the page.
            </summary>
        </member>
        <member name="T:NetatmoWeb.Pages.IndexModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetatmoWeb.Pages.IndexModel.OnGet">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetatmoWeb.Pages.Indoor1Model">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetatmoWeb.Pages.Indoor1Model.OnGet">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetatmoWeb.Pages.Indoor2Model">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetatmoWeb.Pages.Indoor2Model.OnGet">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetatmoWeb.Pages.Indoor3Model">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetatmoWeb.Pages.Indoor3Model.OnGet">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetatmoWeb.Pages.MainModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetatmoWeb.Pages.MainModel.OnGet">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetatmoWeb.Pages.NetatmoModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetatmoWeb.Pages.NetatmoModel.OnGet">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetatmoWeb.Pages.OutdoorModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetatmoWeb.Pages.OutdoorModel.OnGet">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetatmoWeb.Pages.RainModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetatmoWeb.Pages.RainModel.OnGet">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetatmoWeb.Pages.TermsModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetatmoWeb.Pages.TermsModel.OnGet">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetatmoWeb.Pages.WebApiModel">
            <summary>
            Page to display the integrated Swagger UI.
            </summary>
        </member>
        <member name="M:NetatmoWeb.Pages.WebApiModel.OnGet">
            <summary>
            Initializes the state needed for the page.
            </summary>
        </member>
        <member name="T:NetatmoWeb.Pages.WindModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetatmoWeb.Pages.WindModel.OnGet">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetatmoWeb.Program">
            <summary>
            The main ASP.NET application.
            </summary>
        </member>
        <member name="M:NetatmoWeb.Program.Main(System.String[])">
            <summary>
            The main console application entry point.
            </summary>
            <param name="args">The command line arguments.</param>
            <returns>The exit code.</returns>
        </member>
        <member name="T:NetatmoWeb.Services.NetatmoMonitor">
            <summary>
            Monitor service updating selected Netatmo instance data every 5 minutes.
            </summary>
        </member>
        <member name="M:NetatmoWeb.Services.NetatmoMonitor.#ctor(NetatmoLib.INetatmo,Microsoft.AspNetCore.SignalR.IHubContext{NetatmoWeb.Hubs.NetatmoHub},Microsoft.Extensions.Logging.ILogger{NetatmoWeb.Services.NetatmoMonitor},Microsoft.Extensions.Options.IOptions{NetatmoWeb.Models.AppSettings},Microsoft.Extensions.Hosting.IHostingEnvironment)">
            <summary>
            Initializes an instance of the <see cref="T:NetatmoWeb.Services.NetatmoMonitor"/> class.
            </summary>
            <param name="netatmo">The Netatmo instance.</param>
            <param name="hub">The test data SignalR hub.</param>
            <param name="logger">The application logger.</param>
            <param name="options">The application options.</param>
            <param name="environment"></param>
        </member>
        <member name="M:NetatmoWeb.Services.NetatmoMonitor.DoStartAsync">
            <summary>
            Executes the start operation just once.
            </summary>
        </member>
        <member name="M:NetatmoWeb.Services.NetatmoMonitor.DoWorkAsync">
            <summary>
            Executes the update operation every minute.
            </summary>
        </member>
        <member name="T:NetatmoWeb.Services.TimedService">
            <summary>
            Timed background task based on code from https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-2.1
            </summary>
        </member>
        <member name="M:NetatmoWeb.Services.TimedService.#ctor(Microsoft.Extensions.Logging.ILogger{NetatmoWeb.Services.TimedService},Microsoft.Extensions.Options.IOptions{NetatmoWeb.Models.AppSettings},Microsoft.Extensions.Hosting.IHostingEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:NetatmoWeb.Services.TimedService"/> class using dependency injection.
            </summary>
            <param name="logger"></param>
            <param name="options"></param>
            <param name="environment"></param>
        </member>
        <member name="M:NetatmoWeb.Services.TimedService.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Start the async operation.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents an asynchronous operation.</returns>
        </member>
        <member name="M:NetatmoWeb.Services.TimedService.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Stop the async operation.
            </summary>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents an asynchronous operation.</returns>
        </member>
        <member name="M:NetatmoWeb.Services.TimedService.Dispose">
            <summary>
            Implementing basic dispose pattern.
            </summary>
        </member>
        <member name="M:NetatmoWeb.Services.TimedService.OnTimerElapsed(System.Object)">
            <summary>
            The timer callback method.
            </summary>
            <param name="state">The timer callback state object.</param>
        </member>
        <member name="M:NetatmoWeb.Services.TimedService.Dispose(System.Boolean)">
            <summary>
            Actual resource cleanup when disposing.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:NetatmoWeb.Services.TimedService.DoStartAsync">
            <summary>
            Derived classes should override this.
            </summary>
        </member>
        <member name="M:NetatmoWeb.Services.TimedService.DoWorkAsync">
            <summary>
            Derived classes should override this.
            </summary>
        </member>
        <member name="M:NetatmoWeb.Services.TimedService.GetDueTime">
            <summary>
            Returns the milliseconds to the next minute.
            </summary>
            <returns>The milliseconds to the next minute.</returns>
        </member>
        <member name="T:NetatmoWeb.Startup">
            <summary>
            The web application startup class.
            </summary>
        </member>
        <member name="M:NetatmoWeb.Startup.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:NetatmoWeb.Startup"/> class.
            </summary>
            <param name="environment"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:NetatmoWeb.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:NetatmoWeb.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
