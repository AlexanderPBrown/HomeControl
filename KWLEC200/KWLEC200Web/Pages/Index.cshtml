@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

@using Syncfusion.EJ2;
@{
    var TitleFont = new Syncfusion.EJ2.CircularGauge.CircularGaugeFont
    {
        Size = "24px"
    };
}

<div class="container">

    <div class="text-center">
        <h1 class="display-4">Helios KWL EC 200 L</h1>
    </div>

    <div class="row">
        <div class="col-sm-4 col-xs-1">
            <div class="content-wrapper">
                <ejs-circulargauge id="Gauge01" title="Temperature Channel" titleStyle="TitleFont">
                    <e-circulargauge-axes>
                        <e-circulargauge-axis minimum="-20" maximum="40">
                            <e-axis-annotations>
                                <e-axis-annotation angle="180" radius="120%" content=""></e-axis-annotation>
                            </e-axis-annotations>
                            <e-axis-minorticks color="transparent"></e-axis-minorticks>
                        </e-circulargauge-axis>
                    </e-circulargauge-axes>
                </ejs-circulargauge>
            </div>
        </div>

        <div class="col-sm-4 col-xs-1">
            <div class="content-wrapper">
                <ejs-circulargauge id="Gauge02" title="Temperature Exhaust" titleStyle="TitleFont">
                    <e-circulargauge-axes>
                        <e-circulargauge-axis minimum="-20" maximum="40">
                            <e-axis-annotations>
                                <e-axis-annotation angle="180" radius="120%" content=""></e-axis-annotation>
                            </e-axis-annotations>
                            <e-axis-minorticks color="transparent"></e-axis-minorticks>
                        </e-circulargauge-axis>
                    </e-circulargauge-axes>
                </ejs-circulargauge>
            </div>
        </div>

        <div class="col-sm-4 col-xs-1">
            <div class="content-wrapper">
                <ejs-circulargauge id="Gauge03" title="Temperature Extract" titleStyle="TitleFont">
                    <e-circulargauge-axes>
                        <e-circulargauge-axis minimum="-20" maximum="40">
                            <e-axis-annotations>
                                <e-axis-annotation angle="180" radius="120%" content=""></e-axis-annotation>
                            </e-axis-annotations>
                            <e-axis-minorticks color="transparent"></e-axis-minorticks>
                        </e-circulargauge-axis>
                    </e-circulargauge-axes>
                </ejs-circulargauge>
            </div>
        </div>
    </div>

    <br />

    <div class="row">
        <div class="col-sm-4 col-xs-1">
            <div class="content-wrapper">
                <ejs-circulargauge id="Gauge04" title="Temperature Outdoor" titleStyle="TitleFont">
                    <e-circulargauge-axes>
                        <e-circulargauge-axis minimum="-20" maximum="40">
                            <e-axis-annotations>
                                <e-axis-annotation angle="180" radius="120%" content=""></e-axis-annotation>
                            </e-axis-annotations>
                            <e-axis-minorticks color="transparent"></e-axis-minorticks>
                        </e-circulargauge-axis>
                    </e-circulargauge-axes>
                </ejs-circulargauge>
            </div>
        </div>

        <div class="col-sm-4 col-xs-1">
            <div class="content-wrapper">
                <ejs-circulargauge id="Gauge05" title="Ventilation" titleStyle="TitleFont">
                    <e-circulargauge-axes>
                        <e-circulargauge-axis minimum="0" maximum="100">
                            <e-axis-annotations>
                                <e-axis-annotation angle="180" radius="120%" content=""></e-axis-annotation>
                            </e-axis-annotations>
                            <e-axis-minorticks color="transparent"></e-axis-minorticks>
                        </e-circulargauge-axis>
                    </e-circulargauge-axes>
                </ejs-circulargauge>
            </div>
        </div>

        <div class="col-sm-4 col-xs-1">
            <div class="content-wrapper">
                <ejs-circulargauge id="Gauge06" title="Ventilation Level" titleStyle="TitleFont">
                    <e-circulargauge-axes>
                        <e-circulargauge-axis minimum="0" maximum="4">
                            <e-axis-annotations>
                                <e-axis-annotation angle="180" radius="120%" content=""></e-axis-annotation>
                            </e-axis-annotations>
                            <e-axis-majorticks interval="1"></e-axis-majorticks>
                            <e-axis-minorticks color="transparent"></e-axis-minorticks>
                        </e-circulargauge-axis>
                    </e-circulargauge-axes>
                </ejs-circulargauge>
            </div>
        </div>
    </div>

    <div class="text-center">
        <hr />
        <text class="h6" id="message">Zipato Home Control</text>
    </div>

</div>

<script src="~/lib/signalr/signalr.js"></script>
<script>
    var gauge1, gauge2, gauge3
    var gauge4, gauge5, gauge6

    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/hubs/monitor")
        .configureLogging(signalR.LogLevel.Trace)
        .build();

    connection.on('UpdateOverview', function (data) {
        if (!gauge1)
            gauge1 = document.getElementById("Gauge01").ej2_instances[0];
        if (!gauge2)
            gauge2 = document.getElementById("Gauge02").ej2_instances[0];
        if (!gauge3)
            gauge3 = document.getElementById("Gauge03").ej2_instances[0];
        if (!gauge4)
            gauge4 = document.getElementById("Gauge04").ej2_instances[0];
        if (!gauge5)
            gauge5 = document.getElementById("Gauge05").ej2_instances[0];
        if (!gauge6)
            gauge6 = document.getElementById("Gauge06").ej2_instances[0];

        value01 = data.temperatureChannel;
        value02 = data.temperatureExhaust;
        value03 = data.temperatureExtract;
        value04 = data.temperatureOutdoor;
        value05 = data.ventilationPercentage;
        value06 = data.ventilationLevel;

        gauge1.setAnnotationValue(0, 0, "<text class='h4'>" + value01.toFixed(1) + " °C</text>");
        gauge2.setAnnotationValue(0, 0, "<text class='h4'>" + value02.toFixed(1) + " °C</text>");
        gauge3.setAnnotationValue(0, 0, "<text class='h4'>" + value03.toFixed(1) + " °C</text>");
        gauge4.setAnnotationValue(0, 0, "<text class='h4'>" + value04.toFixed(1) + " °C</text>");
        gauge5.setAnnotationValue(0, 0, "<text class='h4'>" + value05.toFixed(1) + " %</text>");
        gauge6.setAnnotationValue(0, 0, "<text class='h4'>" + value06.toFixed(0) + "</text>");

        gauge1.setPointerValue(0, 0, value01);
        gauge2.setPointerValue(0, 0, value02);
        gauge3.setPointerValue(0, 0, value03);
        gauge4.setPointerValue(0, 0, value04);
        gauge5.setPointerValue(0, 0, value05);
        gauge6.setPointerValue(0, 0, value06);

        var dt = new Date();
        var time = dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds();

        if (data.status.code == 0) {
            message.textContent = "Last updated at " + time;
        }
        else {
            message.textContent = time + ": " + data.status.name + " - " + data.status.explanation;
        }
    });

    connection.start()
        .then(function () {
            connection.invoke('UpdateOverview')
                .catch(error => {
                    console.log('Invocation of UpdateOverview failed. Error: ' + error);
                    alert('Update failed with error: ' + error);
                });
        })
        .catch(error => {
            console.log('Could not connect to SignalR server. Error: ' + error);
            alert('Could not connect to monitor hub.');
        });
</script>
